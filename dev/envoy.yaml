admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: upstream_route
            virtual_hosts:
            - name: upstream
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  # cluster: upstream-service
                  host_rewrite_literal: en3or27r551h.x.pipedream.net
                  cluster: debug-service
          http_filters:
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              http_service:
                server_uri:
                  uri: en3or27r551h.x.pipedream.net
                  cluster: debug-service
                  timeout: 10s
              status_on_error:
                code: Unauthorized
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              json_format:
                status: "%RESPONSE_CODE%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                protocol: "%PROTOCOL%"
                response_flags: "%RESPONSE_FLAGS%"
                time: "%START_TIME%"
                upstream: "%UPSTREAM_HOST%"
                upstream_cluster: "%UPSTREAM_CLUSTER%"
                upstream_service_time: "%RESPONSE_DURATION%"
                x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                user_agent: "%REQ(USER-AGENT)%"
                request_id: "%REQ(X-REQUEST-ID)%"
                forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                bytes_received: "%BYTES_RECEIVED%"
                bytes_sent: "%BYTES_SENT%"

  clusters:
  - name: debug-service
    connect_timeout: 1s
    type: logical_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: debug-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: en3or27r551h.x.pipedream.net
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: en3or27r551h.x.pipedream.net
        common_tls_context:
          validation_context:
            match_subject_alt_names:
            - exact: "*.x.pipedream.net"
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
  - name: upstream-service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: upstream-service
                port_value: 80

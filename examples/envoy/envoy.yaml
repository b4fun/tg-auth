admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          use_remote_address: true
          skip_xff_append: true
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains: ["*"]
              routes:
              - match:
                  prefix: "/signin"
                route:
                  cluster: auth-service
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service
          http_filters:
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              http_service:
                server_uri:
                  uri: auth-service:8082
                  cluster: auth-service
                  timeout: 1s
                authorization_request:
                  allowed_headers:
                    patterns:
                    - exact: accept
                    - exact: cookie
                    - exact: proxy-authorization
                  headers_to_add:
                  - key: X-Upstream-Cluter
                    value: '%UPSTREAM_CLUSTER%'
                  - key: X-Forwarded-Method
                    value: '%REQ(:METHOD)%'
                  - key: X-Forwarded-Proto
                    value: '%REQ(:SCHEME)%'
                  - key: X-Forwarded-Host
                    value: '%REQ(:AUTHORITY)%'
                  - key: X-Forwarded-Uri
                    value: '%REQ(:PATH)%'
                  - key: X-Forwarded-For
                    value: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                    - exact: authorization
                    - exact: proxy-authorization
                  allowed_client_headers:
                    patterns:
                    - exact: Set-Cookie
                      ignore_case: true
                  allowed_client_headers_on_success:
                    patterns:
                    - exact: Set-Cookie
                      ignore_case: true
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              json_format:
                status: "%RESPONSE_CODE%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                protocol: "%PROTOCOL%"
                response_flags: "%RESPONSE_FLAGS%"
                time: "%START_TIME%"
                upstream: "%UPSTREAM_HOST%"
                upstream_cluster: "%UPSTREAM_CLUSTER%"
                upstream_service_time: "%RESPONSE_DURATION%"
                x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                user_agent: "%REQ(USER-AGENT)%"
                request_id: "%REQ(X-REQUEST-ID)%"
                forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                bytes_received: "%BYTES_RECEIVED%"
                bytes_sent: "%BYTES_SENT%"

  clusters:
  - name: upstream-service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: upstream-service
                port_value: 80

  - name: auth-service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: auth-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth-service
                port_value: 8082